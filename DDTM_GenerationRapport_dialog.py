# -*- coding: utf-8 -*-
"""
/***************************************************************************
 DDTM_GenerationRapportDialog
                                 A QGIS plugin
 DDTM_GenerationRapport
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-04-09
        git sha              : $Format:%H$
        copyright            : (C) 2025 by louislestagiaire
        email                : lshgt@hotmail.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
from time import sleep
from .formBuilder import formBuilder


# --- Imports QGIS ---
from qgis.core import QgsProject, QgsVectorLayer, QgsMessageLog, Qgis

# --- Imports Qt ---
from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'DDTM_GenerationRapport_dialog_base.ui'))


class DDTM_GenerationRapportDialog(QtWidgets.QDialog, FORM_CLASS):
    
    def setupFormulaires(self):
        """Configure les formulaires."""
        self.formBuilder.setupFormulaireScenario()
        self.formBuilder.setupFormulaireSensibilite()
        self.formBuilder.setupButtons()

    def __init__(self, parent=None):
        """Constructor."""
        super(DDTM_GenerationRapportDialog, self).__init__(parent)
        self.formBuilder = formBuilder(self)
        
        self.setupUi(self)
        try:
            self.setupFormulaires()
        except Exception as e:  
            print(f"Une erreur s'est produite dans le constructeur : {e}")
            self.close()
            raise


